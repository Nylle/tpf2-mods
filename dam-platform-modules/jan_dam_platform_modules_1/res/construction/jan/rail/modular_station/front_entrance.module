local transf = require "transf"
local vec3 = require "vec3"
local modulesutil = require "modulesutil"

function data()


local ground = "jan/station/train/era_a/ground_entrance_10-left.mdl"
local building = "jan/station/train/era_a/front_exit.mdl"

return { 
	availability = {
		yearFrom = 0,
		yearTo = 0,
	},
	cost = {
		price = 0,
	},
	description = {
		name = _("10 m Front Entrance"),
		description = _("Front entrance for 10 m elevated stations"),
		icon = "ui/construction/station/rail/modular_station/submerged_entrance_10m-left-centre.tga"
	}, 
	category = {
		categories = { "Dam Station", },
	},
	type = "passenger_platform_addon",
	order = {
		value = 700,
	},
	metadata = {
		platform = true,
		passenger_platform = true,
	},

	updateFn = function(result, transform, tag, slotId, addModuleFn, params)
		local platformHeight = 2
		local elevation = 10 + platformHeight

		local faces = {
			{7.5,  -20.0, -elevation, 1.0}, --A
			{7.5,  20.0,  -elevation, 1.0}, --B
			{-7.5, 20.0,  -elevation, 1.0}, --C
			{-7.5, -20.0, -elevation, 1.0}, --D
		}
		modulesutil.TransformFaces(transform, faces)
		table.insert(result.terrainAlignmentLists, { 
			type = "EQUAL", 
			faces = {  faces },
			optional = true,
		})

		table.insert(result.groundFaces, {  
			face = faces,
			modes = {
				{
					type = "FILL",
					key = "shared/asphalt_01.gtex.lua"
				},
				{
					type = "STROKE_OUTER",
					key = "street_border.lua"
				},
			},
		})

		-- local hole = {
		-- 	{2,  -10.0, 10, 1.0}, --A
		-- 	{2,  10.0,  10, 1.0}, --B
		-- 	{-2, 10.0,  10, 1.0}, --C
		-- 	{-2, -10.0, 10, 1.0}, --D
		-- }
		-- modulesutil.TransformFaces(transform, hole)
		-- table.insert(result.groundFaces, {  
		-- 	face = hole,
		-- 	modes = {
		-- 		{
		-- 			type = "FILL",
		-- 			key = "hole.lua"
		-- 		}
		-- 	}
		-- })

		
		addModuleFn(ground, transf.rotZTransl(math.rad(0), vec3.new(0,0,0)))
		addModuleFn(building, transf.rotZYXTransl(transf.degToRad(90, 0, 0), vec3.new(0, 20, -12)))
	end,
	
	getModelsFn = function()
		return {
			{ 
				id = building,
				transf = transf.rotZTransl(math.rad(0), vec3.new(0,0,0)),
			},
		}
	end
}
end