local transf = require "transf"
local vec3 = require "vec3"
local modulesutil = require "modulesutil"
local constructionutil = require "constructionutil"
local stationutil = require "jan/stationutil"
local core = require "jan/core"

function data()
    return {
        availability = {
            yearFrom = 0,
            yearTo = 1920
        },
        cost = {
            price = 0
        },
        category = {
            categories = {"misc"}
        },
        description = {
            name = _("S-Bahn Platform Roof"),
            description = _("Butterfly roof for passenger platforms."),
            icon = "ui/construction/station/rail/modular_station/platform_passenger_roof_era_c.tga"
        },
        type = "passenger_platform_roof",
        order = {
            value = 805
        },
        metadata = {
            platform_roof = true,
            ld97era = "jan"
        },

        updateFn = function(result, transform, tag, slotId, addModelFn)
            local coords = result.GetCoord(slotId)
            local i = coords[1]
            local j = coords[2]

            local platformHeight = stationutil.ResolvePlatformHeight(result, coords)

            stationutil.RemoveExistingAssets(result, slotId)

            stationutil.AddButterflyRoof(result, coords, tag, 0, 0, 0)
            stationutil.AddClock(result, coords, tag, 2, 0, 3.12)
            stationutil.AddClock(result, coords, tag, -2, 0, 3.12)

            if (stationutil.IsLennardo97Platform(result, coords)) then
                stationutil.AddPlatformNumberSigns(result, coords, tag, 0.2, 0, 2.50)
                stationutil.AddStationNameSign(result, coords, tag, 0, -16.5, 0)
            else
                stationutil.AddPlatformNumberSigns(result, coords, tag, 0.2, 10, 2.50)
                stationutil.AddPlatformNumberSigns(result, coords, tag, 0.2, -10, 2.50)
                stationutil.AddTrashCan(result, coords, tag, 0, 14, 0)
                stationutil.AddTrashCan(result, coords, tag, 0, -15, 0)
                stationutil.AddBench(result, coords, tag, 0, 16, 0)
                stationutil.AddBench(result, coords, tag, 0, -17, 0)
                stationutil.AddStationNameSign(result, coords, tag, 0, -12.5, 0)
                if(stationutil.HasUnderpass(result, coords)) then
                    stationutil.AddBench(result, coords, tag, 0, 1.5, 0)
                    stationutil.AddBench(result, coords, tag, 0, -1.5, 0)
                else
                    stationutil.AddStationNameSign(result, coords, tag, 0, 6.5, 0)
                    stationutil.AddBench(result, coords, tag, 0, 2, 0)
                    stationutil.AddBench(result, coords, tag, 0, -2, 0)
                end
            end
        end,

        getModelsFn = function()
            local result = {{
                id = "station/rail/jan/butterfly_roof.mdl",
                transf = transf.rotZTransl(math.rad(0), vec3.new(0, 0, 0))
            }, {
                id = "station/rail/jan/butterfly_roof_end.mdl",
                transf = transf.rotZTransl(math.rad(180), vec3.new(0, 0, 0))
            }, {
                id = "station/rail/jan/butterfly_roof_end.mdl",
                transf = transf.rotZTransl(math.rad(0), vec3.new(0, 0, 0))
            }}
            return result
        end
    }

end
